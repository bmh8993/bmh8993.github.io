{"componentChunkName":"component---src-templates-page-template-jsx","path":"/about","result":{"data":{"site":{"siteMetadata":{"title":"Blog by 인간지능","subtitle":"깔끔한 프로그래밍","copyright":"© All rights reserved.","menu":[{"label":"All","path":"/","sub_menu":null},{"label":"About me","path":"/about/","sub_menu":null},{"label":"CS","path":"/cs/","sub_menu":[{"label":"data structure","path":"/data-structure/"}]},{"label":"ETC","path":"/etc/","sub_menu":[{"label":"blog","path":"/blog/"},{"label":"css","path":"/css/"},{"label":"design pattern","path":"/design-pattern/"},{"label":"java","path":"/java/"},{"label":"js","path":"/js/"}]},{"label":"Tags","path":"/tags","sub_menu":null}],"author":{"name":"인간지능","email":"bmh9175@gmail.com","telegram":"#","twitter":"#","github":"/bmh8993","rss":"#","vk":"#"}}},"markdownRemark":{"id":"c8594897-3bbd-5f88-98a4-35f56f7a43e1","html":"<h2>조규현(Regyu)</h2>\n<p>현재 웹 개발을 시작 하고 있으며, 새로운 것을 배우는것을 좋아하며, 프론트엔드와 백엔드 둘다 잘하고 싶은 욕심이 있습니다.  <u><strong>또렷한 기억력보다 흐릿한 잉크가 오래 간다.</strong></u> 라는 중국 속담을 보고 배운것을 정리해야 겠다는 생각이 들었습니다.</p>\n<p>정리한 내용 중 잘못된 내용이 있을 경우 알려주시면 감사하겠습니다.</p>\n<blockquote>\n<p>Technical Skills Summary</p>\n</blockquote>\n<ul>\n<li>Frontend: React  </li>\n<li>Backend:<br>\nNode.js – Express, Sequelize<br>\nJava – Spring<br>\nDatabase:  PostgreSQL, MySQL<br>\nETC: aws, graphql, docker</li>\n</ul>","frontmatter":{"title":"About me","date":null,"description":null}},"allMarkdownRemark":{"edges":[{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/designe-pattern/2020-01-03---Flyweight/index.md","fields":{"slug":"/design-pattern/flyweight/","categorySlug":"/categories/design-pattern/"},"frontmatter":{"title":"Flyweight 패턴","date":"2020-01-03T05:06:35.750Z","category":"design-pattern","description":"플라이웨이트 패턴은 비용이 큰 자원을 공통으로 사용할 수 있도록 만드는 패턴이다. 1990년에 Paul Calder와 Mark Linton이 WYSIWYG 문서 편집기의 글자모양 정보를 효율적으로 다루기 위해 처음 도입되고 널리 연구되어 졌다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/designe-pattern/2020-01-02---Singleton/index.md","fields":{"slug":"/design-pattern/singleton/","categorySlug":"/categories/design-pattern/"},"frontmatter":{"title":"Singleton 패턴","date":"2020-01-02T05:06:35.750Z","category":"design-pattern","description":"객체가 너무 많아지면 컴퓨터 자원을 과도하게 사용하게 되고, 이는 프로그램 전체의 속도를 느리게 할 수 있다. → 개발자는 객체의 최대 개수를 제한할 필요가 생긴다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/designe-pattern/2020-01-01---DI/index.md","fields":{"slug":"/design-pattern/di/","categorySlug":"/categories/design-pattern/"},"frontmatter":{"title":"DI (Dependency Injection)","date":"2020-01-01T05:06:35.750Z","category":"design-pattern","description":"객체 읜존성과 객체지향에서의 결합 관계에 대해 간략하게 정리한 내용"}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---cs/data-structure/2019-11-14---DataStructure-Trie/index.md","fields":{"slug":"/cs/data-structure/trie","categorySlug":"/categories/data-structure/"},"frontmatter":{"title":"Trie 트라이","date":"2019-11-14T05:06:35.750Z","category":"data-structure","description":"코딩 테스트 연습을 하면서 알게 된 Trie (트라이) 라는 자료 구조에 대헤 정리 한다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/java/2019-07-15---JAVA-순열/index.md","fields":{"slug":"/etc/permutation/","categorySlug":"/categories/java/"},"frontmatter":{"title":"JAVA-순열(Permutation)","date":"2019-07-15T05:06:35.750Z","category":"java","description":"[unTIL the end] Java 배열 중 선택 갯수를 지정하여 순열을 만드는 방법에 대한 설명입니다. (미리보기: 제네릭 타입을 이용한 Permutation 클래스 설명)"}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/java/2019-07-14---JAVA-조합/index.md","fields":{"slug":"/etc/combination/","categorySlug":"/categories/java/"},"frontmatter":{"title":"JAVA-조합(Combination)","date":"2019-07-14T05:06:35.750Z","category":"java","description":"[unTIL the end] Java 배열 중 선택 갯수를 지정하여 조합을 만드는 방법에 대한 설명입니다. (미리보기: 제네릭 타입을 이용한 Picker 클래스 설명)"}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/java/2019-06-26---JAVA-객체 정렬(비교)의 기준/index.md","fields":{"slug":"/etc/comparable-comparator/","categorySlug":"/categories/java/"},"frontmatter":{"title":"JAVA-객체 정렬(비교)의 기준?Comparable, Comparator","date":"2019-06-26T05:06:35.750Z","category":"java","description":"[unTIL the end] Java 객체를 정렬 하기위한 인터페이스 Comparable, Comparator 정리"}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/blog/2019-06-25---unTIL-the-end-다짐/index.md","fields":{"slug":"/etc/until-the-end/","categorySlug":"/categories/blog/"},"frontmatter":{"title":"다시 시작하는 TIL다짐","date":"2019-06-25T14:06:35.750Z","category":"blog","description":"블로그를 열자마자 이 글이 맨위에 있다면 안되겠다!! 라고 자극을 주기위해 혼자 적은글 입니다.(반성문)"}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/js/2019-04-30-es6_basic4/index.md","fields":{"slug":"/etc/es6-basic-4/","categorySlug":"/categories/js/"},"frontmatter":{"title":"ES6 Basic 4","date":"2019-04-30T05:45:35.750Z","category":"js","description":"Code spitz에서 강의한 ES6 기초, 루프구조를 추상화하고 지연실행, 제네레이터의 지연실행과 추상 루프화에 대해 알아봅니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/js/2019-04-25-es6_basic3/index.md","fields":{"slug":"/etc/es6-basic-3/","categorySlug":"/categories/js/"},"frontmatter":{"title":"ES6 Basic 3","date":"2019-04-25T05:45:35.750Z","category":"js","description":"Code spitz에서 강의한 ES6 기초, 루프구조에 대해 보다 깊이 탐험해봅니다. 또한 Iterator과 Iterable의 관계, Generator에 대해 알아봅시다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/js/2019-04-24-es6_basic2/index.md","fields":{"slug":"/etc/es6-basic-2/","categorySlug":"/categories/js/"},"frontmatter":{"title":"ES6 Basic 2","date":"2019-04-24T05:45:35.750Z","category":"js","description":"Code spitz에서 강의한 ES6 기초, 흐름제어에 대해 기초에 대해 알게되었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/js/2019-04-09-es6_basic1/index.md","fields":{"slug":"/etc/es6-basic-1/","categorySlug":"/categories/js/"},"frontmatter":{"title":"ES6 Basic 1","date":"2019-04-09T06:45:35.750Z","category":"js","description":"Code spitz에서 강의한 ES6 기초, Compile Program 과 Script program 및 프로그램의 기초에 대해 알게되었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/css/2019-04-08-cssRendering6/index.md","fields":{"slug":"/etc/css-rendering-6/","categorySlug":"/categories/css/"},"frontmatter":{"title":"Css Rendering 6","date":"2019-04-08T06:45:35.750Z","category":"css","description":"Code spitz에서 강의한 Css Rendering 6 Display Model 과 Flex box에 대해 알게되었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/css/2019-04-06-cssRendering5/index.md","fields":{"slug":"/etc/css-rendering-5/","categorySlug":"/categories/css/"},"frontmatter":{"title":"Css Rendering 5","date":"2019-04-06T16:22:35.750Z","category":"css","description":"Code spitz에서 강의한 Css Rendering 5 Semantic web 의미론 적인 웹이란 무엇인지, HTML DOM과 CSS와의 어떤 관계를 가지는지에 대해 알게되었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/css/2019-04-04-cssRendering4/index.md","fields":{"slug":"/etc/css-rendering-4/","categorySlug":"/categories/css/"},"frontmatter":{"title":"Css Rendering 4","date":"2019-04-04T11:28:35.750Z","category":"css","description":"Code spitz에서 강의한 Css Rendering 4 Transform 내용을 정리한 글입니다. 평면 이미지를 이용하여 3d로 변경하는 실습과 cpu 와 gpu를 각각 나누어서 사용하는 방법에 대해 알게되었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/css/2019-04-03-cssRendering3/index.md","fields":{"slug":"/etc/css-rendering-3/","categorySlug":"/categories/css/"},"frontmatter":{"title":"Css Rendering 3","date":"2019-04-03T08:16:35.750Z","category":"css","description":"Code spitz에서 강의한 Css Rendering 3 CSSOM (css 객체 모델)내용을 정리한 글입니다. CSSOM 을 이용하여 DOM 을 조작하지 않고도 성능저하 없이 화면을 조정 할 수 있다는 것을 알게 되었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/css/2019-04-02-cssRendering2/index.md","fields":{"slug":"/etc/css-rendering-2/","categorySlug":"/categories/css/"},"frontmatter":{"title":"Css Rendering 2","date":"2019-04-02T06:24:35.750Z","category":"css","description":"Code spitz에서 강의한 Css Rendering 2 Morden Box내용을 정리한 글입니다. Morder Box의 속성의 Geometry, Fragment 적용 여부를 알 수 있었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/css/2019-04-01-cssRendering1/index.md","fields":{"slug":"/etc/css-rendering-1/","categorySlug":"/categories/css/"},"frontmatter":{"title":"Css Rendering 1","date":"2019-04-01T05:06:35.750Z","category":"css","description":"Code spitz에서 강의한 Css Rendering Graphics System내용을 정리한 글입니다. Graphics System과 Nomal Flow가 어떤것인지에 대해 알 수 있었습니다."}}},{"node":{"fileAbsolutePath":"/Users/baemh/Desktop/bmh8993.github.io/src/pages/---articles/---etc/blog/2019-03-31---Gatsby-Js로-블로그-시작하기/index.md","fields":{"slug":"/etc/start-gatsby-for-blog/","categorySlug":"/categories/blog/"},"frontmatter":{"title":"Gatsby Js 로 블로그 시작하기","date":"2019-03-31T14:06:35.750Z","category":"blog","description":"공부한 내용을 정리해서 지속적으로 공부의 동기를 가지기 위해 블로그가 필요하다고 생각했고, Gatsby js + Netlify 를 이용하여 블로그를 시작하기로 했다. "}}}]}},"pageContext":{"slug":"/about"}},"staticQueryHashes":[]}