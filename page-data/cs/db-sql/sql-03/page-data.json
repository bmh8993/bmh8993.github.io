{"componentChunkName":"component---src-templates-post-template-jsx","path":"/cs/db-sql/sql-03/","result":{"data":{"site":{"siteMetadata":{"title":"Blog by 인간지능","subtitle":"깔끔한 프로그래밍","copyright":"© All rights reserved.","author":{"name":"인간지능","twitter":"#"},"disqusShortname":"bmh8993-github-io","url":"https://bmh8993.github.io/"}},"markdownRemark":{"id":"8b22f941-8478-55da-8a66-6ed7d19bc82a","html":"<p>지난 포스트에서 설명한 내용을 가져오겠습니다.<br><br></p>\n<p><code class=\"language-text\">순위</code>는 <code class=\"language-text\">누적 대출액</code>을 기준으로 내림차순 정렬할 예정입니다. 순위는 없는 컬럼이므로 만들어야 할 것 같습니다.<br>\n<code class=\"language-text\">순위 변동</code>이라는 데이터는 말 그대로 변동을 나타내기 때문에 <strong>오늘과 어제</strong>처럼 차이가 필요합니다.<br>\n여기서 중요한 것은 <code class=\"language-text\">어제와 오늘</code> 테이블 <code class=\"language-text\">두 개</code>가 필요하고, 두 개의 테이블은 관계가 필요하다는 말이 됩니다.<br>\n<code class=\"language-text\">회사이름</code>, <code class=\"language-text\">누적 대출액</code>, <code class=\"language-text\">누적 상환액</code>은 Item 테이블에서 가져올 수 있는 데이터 입니다.<br>\n<code class=\"language-text\">순수 대출액</code>은 하나의 테이블, 예를 들면 오늘의 테이블 안에서 계산할 수 있는 데이터 입니다.<br><br></p>\n<p>조건을 살펴보면 필터 조건이 있습니다. 그런데 문제가 있습니다.\n<code class=\"language-text\">Header</code>테이블과 <code class=\"language-text\">Item</code>테이블은 서로 전혀 다른 데이터를 가지고 있습니다.\n<code class=\"language-text\">Header</code>테이블은 조건을, <code class=\"language-text\">Item</code>테이블은 정보를 가지고 있습니다. 두 테이블의 연결고리는 <code class=\"language-text\">company_no</code>뿐입니다.</p>\n<hr>\n<p>이해를 위해 <code class=\"language-text\">단계</code>라는 표현을 그림으로 표현했었는데 이제부터는 <code class=\"language-text\">단계</code>라고 표시하겠습니다.\n또한 <code class=\"language-text\">약속</code>을 하나 하자면 가장 상위 단계의 테이블을 <code class=\"language-text\">A</code>, 그 다음을 <code class=\"language-text\">B</code>, 그 다음을 <code class=\"language-text\">C</code>라고 표시하고\n같은 단계에서 존재하는 서로 다른 테이블은 <code class=\"language-text\">1, 2, 3..</code>과 같이 표시하겠습니다.<br>\n<strong>이렇게 표시하는 점이 생각보다 중요합니다.</strong> 하지만 약속일 뿐 스스로 정해도 좋습니다.<br>\n(SQL의 기본적인 부분은 학습이 되어져 있다고 가정하겠습니다.)</p>\n<hr>\n<h3>A단계</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> A1<span class=\"token punctuation\">.</span>순위<span class=\"token punctuation\">,</span> ifnull<span class=\"token punctuation\">(</span>A2<span class=\"token punctuation\">.</span>순위 <span class=\"token operator\">-</span> A1<span class=\"token punctuation\">.</span>순위<span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> A1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> A1<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> A1<span class=\"token punctuation\">.</span>기타 데이터\n<span class=\"token keyword\">From</span> 오늘 A1\n<span class=\"token keyword\">Left</span> <span class=\"token keyword\">Outer</span> <span class=\"token keyword\">Join</span> 어제 A2\n<span class=\"token keyword\">On</span> A1<span class=\"token punctuation\">.</span>companyNo <span class=\"token operator\">=</span> A2<span class=\"token punctuation\">.</span>companyNo</code></pre></div>\n<p>이렇게 제일 큰 단계의 쿼리가 완성 되었습니다.<br>\n<code class=\"language-text\">Inner Join</code>이 아닌 <code class=\"language-text\">Left Outer Join</code>을 한 이유는 어제는 없던 회사가 오늘 생겼을 수가 있기 때문입니다.</p>\n<ul>\n<li><code class=\"language-text\">Inner Join</code>은 <code class=\"language-text\">매칭 조건(On)</code>이 두 개의 테이블에 완전히 매칭되는 로우만 보여줍니다.</li>\n<li>하지만 <code class=\"language-text\">Left Outer Join</code>은 <code class=\"language-text\">매칭 조건(On)</code>을 기본으로 매칭하지만, 매칭되지 않는 로우도 <code class=\"language-text\">함께</code> 보여줍니다. 그래서 <code class=\"language-text\">ifnull</code>을 사용했습니다.</li>\n</ul>\n<p>나머지는 모두 오늘(A1)에서 가져올 수 있는 데이터 입니다. 다음 하위 단계(B)를 작성해보겠습니다.</p>\n<hr>\n<h3>B단계</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> B2<span class=\"token punctuation\">.</span><span class=\"token variable\">@num1</span>:<span class=\"token operator\">=</span><span class=\"token variable\">@num1</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">as</span> 순위<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>기타 데이터\n<span class=\"token keyword\">From</span> 순위를 제외한 데이터를 가지고 있는 테이블 B1\n<span class=\"token keyword\">Inner</span> <span class=\"token keyword\">Join</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">Select</span> <span class=\"token variable\">@num1</span>:<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> B2\n<span class=\"token keyword\">On</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> 정렬 조건<span class=\"token punctuation\">(</span>조건 <span class=\"token number\">2</span>번 <span class=\"token operator\">+</span> <span class=\"token number\">5</span>번<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">B</code>단계의 쿼리로 <code class=\"language-text\">오늘(A1)</code>에 해당하는 쿼리입니다.<br>\n위에서 설명 했듯이 <code class=\"language-text\">순위</code>는 없는 컬럼입니다. 없는 컬럼은 <code class=\"language-text\">Inner Join</code>의 대상이 되는 테이블 안에서 변수를 통해 만들어줍니다.\n그리고 순위를 제외한 데이터를 가지고 있는 테이블과 <code class=\"language-text\">Join</code> 합니다. <code class=\"language-text\">Outer Join</code>도 무관해 보입니다. 어짜피 Join 조건은 없으니까요.<br>\n이후에 정렬을 진행합니다. 5번 조건에 해당하는 정렬은 Order By 뒤로 넣어줍니다.<br>\n<br>\n<strong>여기서 잠깐, 오늘과 어제의 차이는 무엇일까요?</strong><br>\nB1에서 날짜 조건을 통해 차이가 생깁니다. 즉, B1과 B2는 구조가 동일하다는 이야기가 됩니다.\n다음 하위 단계(C)를 작성해보겠습니다.</p>\n<hr>\n<h3>C단계</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> C1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> C2<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> C2<span class=\"token punctuation\">.</span>기타 데이터\n<span class=\"token keyword\">From</span> Header C1\n<span class=\"token keyword\">Inner</span> <span class=\"token keyword\">Join</span> Item C2\n<span class=\"token keyword\">On</span> C1<span class=\"token punctuation\">.</span>companyNo <span class=\"token operator\">=</span> C2<span class=\"token punctuation\">.</span>companyNo\n<span class=\"token keyword\">Where</span> 데이터의 생성 날짜 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>D단계<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>조건 <span class=\"token number\">4</span>번<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">And</span> C1<span class=\"token punctuation\">.</span>isUse <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">(</span>조건 <span class=\"token number\">1</span>번<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">And</span> 추가 필터 조건<span class=\"token punctuation\">(</span>조건 <span class=\"token number\">3</span>번<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> 정렬 조건<span class=\"token punctuation\">(</span>조건 <span class=\"token number\">2</span>번 <span class=\"token operator\">+</span> <span class=\"token number\">5</span>번<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">오늘(A1)</code>에 해당하는 C단계 입니다.<br>\nB단계에서 회사 이름을 가져오고 여러 조건들을 통해 필터를 진행하기 위해서 <code class=\"language-text\">Inner Join</code>이 필요합니다.<br>\n거의 마지막 단계에서 필터 조건이나 정렬 조건이 사용됩니다.<br>\n마지막 D단계 입니다.</p>\n<hr>\n<h3>D단계</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> stdDate\n<span class=\"token keyword\">From</span> Item\n<span class=\"token keyword\">Where</span> stdDate <span class=\"token operator\">&lt;=</span> DATE_FORMAT<span class=\"token punctuation\">(</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> stdDate <span class=\"token keyword\">Desc</span>\nLimin <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span></code></pre></div>\n<p>C단계의 Where에 들어갈 서브쿼리 입니다. 어제 날짜를 구하려면 <code class=\"language-text\">&lt;=</code>가 아닌 <code class=\"language-text\">&lt;</code>로 바꿔주시면 됩니다.<br>\n하나씩 차분히 하다보면 생각보다 어렵지 않습니다.<br>\n<br>\n전체 쿼리를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> A1<span class=\"token punctuation\">.</span>순위<span class=\"token punctuation\">,</span> ifnull<span class=\"token punctuation\">(</span>A2<span class=\"token punctuation\">.</span>순위 <span class=\"token operator\">-</span> A1<span class=\"token punctuation\">.</span>순위<span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> A1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> A1<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> A1<span class=\"token punctuation\">.</span>기타 데이터\n<span class=\"token keyword\">From</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">Select</span> B2<span class=\"token punctuation\">.</span><span class=\"token variable\">@num1</span>:<span class=\"token operator\">=</span><span class=\"token variable\">@num1</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">as</span> 순위<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>기타 데이터\n    <span class=\"token keyword\">From</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">Select</span> C1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> C2<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> C2<span class=\"token punctuation\">.</span>기타 데이터\n      <span class=\"token keyword\">From</span> Header C1\n      <span class=\"token keyword\">Inner</span> <span class=\"token keyword\">Join</span> Item C2\n      <span class=\"token keyword\">On</span> C1<span class=\"token punctuation\">.</span>companyNo <span class=\"token operator\">=</span> C2<span class=\"token punctuation\">.</span>companyNo\n      <span class=\"token keyword\">Where</span> 데이터의 생성 날짜 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">Select</span> stdDate\n        <span class=\"token keyword\">From</span> Item\n        <span class=\"token keyword\">Where</span> stdDate <span class=\"token operator\">&lt;=</span> DATE_FORMAT<span class=\"token punctuation\">(</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> stdDate <span class=\"token keyword\">Desc</span>\n        Limin <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">And</span> C1<span class=\"token punctuation\">.</span>isUse <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token operator\">And</span> 추가 필터 조건\n      <span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> 정렬 조건\n      <span class=\"token punctuation\">)</span> B1\n    <span class=\"token keyword\">Inner</span> <span class=\"token keyword\">Join</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">Select</span> <span class=\"token variable\">@num1</span>:<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> B2\n    <span class=\"token keyword\">On</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> 정렬 조건\n    <span class=\"token punctuation\">)</span> A1\n<span class=\"token keyword\">Left</span> <span class=\"token keyword\">Outer</span> <span class=\"token keyword\">Join</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">Select</span> B2<span class=\"token punctuation\">.</span><span class=\"token variable\">@num2</span>:<span class=\"token operator\">=</span><span class=\"token variable\">@num2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">as</span> 순위<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> B1<span class=\"token punctuation\">.</span>기타 데이터\n    <span class=\"token keyword\">From</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">Select</span> C1<span class=\"token punctuation\">.</span>회사 이름<span class=\"token punctuation\">,</span> C2<span class=\"token punctuation\">.</span>누적 대출액<span class=\"token punctuation\">,</span> C2<span class=\"token punctuation\">.</span>기타 데이터\n      <span class=\"token keyword\">From</span> Header C1\n      <span class=\"token keyword\">Inner</span> <span class=\"token keyword\">Join</span> Item C2\n      <span class=\"token keyword\">On</span> C1<span class=\"token punctuation\">.</span>companyNo <span class=\"token operator\">=</span> C2<span class=\"token punctuation\">.</span>companyNo\n      <span class=\"token keyword\">Where</span> 데이터의 생성 날짜 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">Select</span> stdDate\n        <span class=\"token keyword\">From</span> Item\n        <span class=\"token keyword\">Where</span> stdDate <span class=\"token operator\">&lt;</span> DATE_FORMAT<span class=\"token punctuation\">(</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> stdDate <span class=\"token keyword\">Desc</span>\n        Limin <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">And</span> C1<span class=\"token punctuation\">.</span>isUse <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token operator\">And</span> 추가 필터 조건\n      <span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> 정렬 조건\n      <span class=\"token punctuation\">)</span> B1\n    <span class=\"token keyword\">Inner</span> <span class=\"token keyword\">Join</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">Select</span> <span class=\"token variable\">@num2</span>:<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> B2\n    <span class=\"token keyword\">On</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">Order</span> <span class=\"token keyword\">By</span> 정렬 조건\n    <span class=\"token punctuation\">)</span> A2\n<span class=\"token keyword\">On</span> A1<span class=\"token punctuation\">.</span>companyNo <span class=\"token operator\">=</span> A2<span class=\"token punctuation\">.</span>companyNo</code></pre></div>\n<p>모두 합치기만 하면 됩니다.<br>\n이렇게 정리하고보니 생각보다 수월해보입니다. 여러 테이블을 가지고 연습하시면 좋을 것 같습니다.<br>\n기본서를 추천해 드리자면 <code class=\"language-text\">SQL 첫걸음</code>을 추천드립니다.<br>\n추천하는 이유는 일단 <code class=\"language-text\">mysql</code>을 베이스로 하고 있으며, 직접 다룰 수 있도록 예제 파일과 예제가 준비되어 있습니다.<br></p>\n<h3>지극히 주관적인 블로그를 읽어주셔서 감사합니다!</h3>","fields":{"tagSlugs":["/tags/sql/"],"slug":"/cs/db-sql/sql-03/"},"frontmatter":{"title":"SQL#03//sql 큰 그림에서 작은 그림으로","tags":["sql"],"date":"2020-02-12T23:02:56.000Z","description":"SQL을 짜는 전략에 대해서 알아봅시다.","path":"/cs/db-sql/sql-03/","category":"DB&SQL"},"tableOfContents":"<ul>\n<li><a href=\"/cs/db-sql/sql-03/#a%EB%8B%A8%EA%B3%84\">A단계</a></li>\n<li><a href=\"/cs/db-sql/sql-03/#b%EB%8B%A8%EA%B3%84\">B단계</a></li>\n<li><a href=\"/cs/db-sql/sql-03/#c%EB%8B%A8%EA%B3%84\">C단계</a></li>\n<li><a href=\"/cs/db-sql/sql-03/#d%EB%8B%A8%EA%B3%84\">D단계</a></li>\n<li><a href=\"/cs/db-sql/sql-03/#%EC%A7%80%EA%B7%B9%ED%9E%88-%EC%A3%BC%EA%B4%80%EC%A0%81%EC%9D%B8-%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EC%9D%BD%EC%96%B4%EC%A3%BC%EC%85%94%EC%84%9C-%EA%B0%90%EC%82%AC%ED%95%A9%EB%8B%88%EB%8B%A4\">지극히 주관적인 블로그를 읽어주셔서 감사합니다!</a></li>\n</ul>","headings":[{"value":"A단계","depth":3},{"value":"B단계","depth":3},{"value":"C단계","depth":3},{"value":"D단계","depth":3},{"value":"지극히 주관적인 블로그를 읽어주셔서 감사합니다!","depth":3}]}},"pageContext":{"slug":"/cs/db-sql/sql-03/"}},"staticQueryHashes":[]}