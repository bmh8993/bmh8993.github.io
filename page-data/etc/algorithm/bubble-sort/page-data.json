{"componentChunkName":"component---src-templates-post-template-jsx","path":"/etc/algorithm/bubble-sort","result":{"data":{"site":{"siteMetadata":{"title":"Blog by 인간지능","subtitle":"깔끔한 프로그래밍","copyright":"© All rights reserved.","author":{"name":"인간지능","twitter":"#"},"disqusShortname":"bmh8993-github-io","url":"https://bmh8993.github.io/"}},"markdownRemark":{"id":"1ac5c115-ead6-5734-814f-fc37bd447aa9","html":"<p>버블정렬에 대해서 알아봅시다.</p>\n<h1>버블정렬의 핵심 IDEA</h1>\n<ol>\n<li>전체 elements의 개수가 n 이라면, 두 개씩 비교하게 되므로 loop의 범위를 n-1로 합니다.</li>\n<li>비교가 끝나면 제일 큰 요소가 확정되는데, 확정된 요소를 제외하고 loop를 돌면됩니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>데이터 길이 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#✅1</span>\n    <span class=\"token keyword\">for</span> index_2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>데이터 길이 <span class=\"token operator\">-</span> loop 회수 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#✅2</span>\n        <span class=\"token keyword\">if</span> 앞 데이터 <span class=\"token operator\">></span> 뒤 데이터<span class=\"token punctuation\">:</span>  <span class=\"token comment\">#✅3</span>\n            스왑  <span class=\"token comment\">#✅4</span></code></pre></div>\n<blockquote>\n<p>✅1: 데이터길이-1 만큼 outer loop range를 지정한다.<br>\n✅2: i번 돌면 i개의 요소를 제외하고 inner loop를 진행하면 된다.<br>\n✅3: 조건 확인<br>\n✅4: swap<br></p>\n</blockquote>\n<hr>\n<h1>추가 IDEA</h1>\n<p>이미 정렬 되어져 있다면 = swap이 한 번도 발생하지 않았다면, 그 다음 loop를 진행하지 않아도 됩니다.<br>\n어떻게 알 수 있을까요? -> 상태를 확인하는 변수를 하나 만들자!</p>\n<hr>\n<h1>구현</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">bubble_sort</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        is_swaped <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                is_swaped <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n        <span class=\"token keyword\">if</span> is_swaped <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">return</span> data</code></pre></div>\n<hr>\n<h1>결과</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\ndata <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nbubble_sort<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># [3, 15, 17, 20, 28, 50, 55, 63, 70, 76]</span></code></pre></div>\n<h2>시간 복잡도 계산</h2>\n<p>loop 안에서 loop를 진행하므로 O(n<sup>2</sup>)<br>\n이미 정렬된 상태라면 O(n)</p>","fields":{"tagSlugs":["/tags/algorithm/","/tags/bubble-sort/"],"slug":"/etc/algorithm/bubble-sort"},"frontmatter":{"title":"Algorithm/버블 정렬(bubble sort with python)","tags":["Algorithm","bubble-sort"],"date":"2021-01-16T23:28:35.000Z","description":"버블정렬에 대해서 알아봅시다.","path":"/etc/algorithm/bubble-sort","category":"Algorithm"},"tableOfContents":"<ul>\n<li><a href=\"/etc/algorithm/bubble-sort/#%EB%B2%84%EB%B8%94%EC%A0%95%EB%A0%AC%EC%9D%98-%ED%95%B5%EC%8B%AC-idea\">버블정렬의 핵심 IDEA</a></li>\n<li><a href=\"/etc/algorithm/bubble-sort/#%EC%B6%94%EA%B0%80-idea\">추가 IDEA</a></li>\n<li><a href=\"/etc/algorithm/bubble-sort/#%EA%B5%AC%ED%98%84\">구현</a></li>\n<li>\n<p><a href=\"/etc/algorithm/bubble-sort/#%EA%B2%B0%EA%B3%BC\">결과</a></p>\n<ul>\n<li><a href=\"/etc/algorithm/bubble-sort/#%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84-%EA%B3%84%EC%82%B0\">시간 복잡도 계산</a></li>\n</ul>\n</li>\n</ul>","headings":[{"value":"버블정렬의 핵심 IDEA","depth":1},{"value":"추가 IDEA","depth":1},{"value":"구현","depth":1},{"value":"결과","depth":1},{"value":"시간 복잡도 계산","depth":2}]}},"pageContext":{"slug":"/etc/algorithm/bubble-sort"}},"staticQueryHashes":[]}