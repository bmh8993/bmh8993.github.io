{"componentChunkName":"component---src-templates-post-template-jsx","path":"/python/django/drf-05-handle-nested-relationships/","result":{"data":{"site":{"siteMetadata":{"title":"Blog by 인간지능","subtitle":"깔끔한 프로그래밍","copyright":"© All rights reserved.","author":{"name":"인간지능","twitter":"#"},"disqusShortname":"bmh8993-github-io","url":"https://bmh8993.github.io/"}},"markdownRemark":{"id":"2c093946-b663-52e3-bd1f-e3a3f9ea6315","html":"<p>DRF에서 nested된 관계를 다루는 방법을 알아봅시다.</p>\n<p>관계형 데이터베이스를 사용하면 당연히 <code class=\"language-text\">ForiegnKey</code>를 사용하게 됩니다.\n그렇다면 DRF로 nested된 관계는 어떻게 다뤄야할까요<br>\nserializer와 views가 조금씩 달라질 것입니다.<br></p>\n<p><strong>가정한 모델의 관계는 <code class=\"language-text\">Jounalist : Article = 1 : N</code>, 한 명의 저널리스트가 여러개의 기사를 쓸 수 있다고 가정했습니다.</strong></p>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/models.py</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Journalist</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    first_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n    last_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n    biography <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>first_name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>last_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Article</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    author <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>\n            Journalist<span class=\"token punctuation\">,</span>\n            on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">,</span>\n            related_name<span class=\"token operator\">=</span><span class=\"token string\">\"articles\"</span>\n            <span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span>\n    description <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    body <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    location <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span>\n    publication_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    active <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    created_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now_add<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    updated_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/api/serializer.py</span>\n\n<span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> serializers\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Article<span class=\"token punctuation\">,</span> Journalist\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JournalistSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Journalist\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ArticleSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Article\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/api/views.py</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ArticleListCreateAPIView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        articles <span class=\"token operator\">=</span> Article<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>active<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        serializer <span class=\"token operator\">=</span> ArticleSerializer<span class=\"token punctuation\">(</span>articles<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        serializer <span class=\"token operator\">=</span> ArticleSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_201_CREATED<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_400_BAD_REQUEST<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ArticleDetailAPIView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_object</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        article <span class=\"token operator\">=</span> get_object_or_404<span class=\"token punctuation\">(</span>Article<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>pk<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> article\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        article <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_object<span class=\"token punctuation\">(</span>pk<span class=\"token punctuation\">)</span>\n        serializer <span class=\"token operator\">=</span> ArticleSerializer<span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        article <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_object<span class=\"token punctuation\">(</span>pk<span class=\"token punctuation\">)</span>\n        serializer <span class=\"token operator\">=</span> ArticleSerializer<span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_400_BAD_REQUEST<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        article <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_object<span class=\"token punctuation\">(</span>pk<span class=\"token punctuation\">)</span>\n        article<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_204_NO_CONTENT<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JounalistListCreateAPIView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/api/urls.py</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n<span class=\"token keyword\">from</span> news<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n        ArticleListCreateAPIView<span class=\"token punctuation\">,</span>\n        ArticleDetailAPIView<span class=\"token punctuation\">,</span>\n        JounalistListCreateAPIView\n        <span class=\"token punctuation\">)</span>\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        path<span class=\"token punctuation\">(</span><span class=\"token string\">\"articles/\"</span><span class=\"token punctuation\">,</span> ArticleListCreateAPIView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"article-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">(</span><span class=\"token string\">\"articles/&lt;int:pk>/\"</span><span class=\"token punctuation\">,</span> ArticleDetailAPIView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"article-detail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">(</span><span class=\"token string\">\"journalists/\"</span><span class=\"token punctuation\">,</span> JounalistListCreateAPIView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"journalist-list\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span></code></pre></div>\n<ol>\n<li>\n<p>여기서 <code class=\"language-text\">GET /api/articles/</code>를 호출하면?</p>\n<blockquote>\n<p>author의 값으로 해당 <code class=\"language-text\">journalist_id</code>가 호출됩니다.</p>\n</blockquote>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/articles/\nHTTP <span class=\"token number\">200</span> OK\nAllow<span class=\"token operator\">:</span> GET<span class=\"token punctuation\">,</span> POST<span class=\"token punctuation\">,</span> HEAD<span class=\"token punctuation\">,</span> OPTIONS\nContent-Type<span class=\"token operator\">:</span> application/json\nVary<span class=\"token operator\">:</span> Accept\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"time_since_publication\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"13 hours, 52 minutes\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test title\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test description\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"!!!\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"!!!!!\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"publication_date\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"created_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26T13:32:15.453026Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"updated_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26T13:32:15.453049Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ol start=\"2\">\n<li>\n<p>author의 detail까지 보고싶으면?</p>\n<ul>\n<li>ArticleSerializer에 <code class=\"language-text\">author = JournalistSerializer(read_only=True)</code>를 추가합니다.</li>\n<li>혹시나 하는 마음에 author가 아닌 <code class=\"language-text\">test</code>라는 변수로 JournalistSerializer를 선언했더니\n값이 안나옵니다. model에 선언된 field 이름으로 해야하는 것 같습니다. 자세한건 나중에 소스코드를\n살펴봐야겠습니다.</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ArticleSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    author <span class=\"token operator\">=</span> JournalistSerializer<span class=\"token punctuation\">(</span>read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Article\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/articles/\nHTTP <span class=\"token number\">200</span> OK\nAllow<span class=\"token operator\">:</span> GET<span class=\"token punctuation\">,</span> POST<span class=\"token punctuation\">,</span> HEAD<span class=\"token punctuation\">,</span> OPTIONS\nContent-Type<span class=\"token operator\">:</span> application/json\nVary<span class=\"token operator\">:</span> Accept\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"time_since_publication\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"14 hours, 22 minutes\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"first_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bae\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"last_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mh\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"biography\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hi\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test title\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test description\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"!!!\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"!!!!!\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"publication_date\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"created_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26T13:32:15.453026Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"updated_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26T13:32:15.453049Z\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ol start=\"3\">\n<li>\n<p>author의 <code class=\"language-text\">__str__</code>이 보고싶으면?</p>\n<ul>\n<li><code class=\"language-text\">author = serializers.StringRelatedField()</code>를 선언하면 model에 정의한 <code class=\"language-text\">__str__</code>의\nreturn 값이 나옵니다.</li>\n</ul>\n</li>\n<li>\n<p>이번에는 journalist에 해당하는 article을 보려고 합니다.</p>\n<ul>\n<li>동일하게 JournalistSerializer에 <code class=\"language-text\">articles = ArticleSerializer(many=True, read_only=True)</code>\n를 선언하면 되고 articles는 model에서 ForiegnKey 옵션으로 지정한 related_name입니다.</li>\n<li>JounalistListCreateAPIView를 작성합니다.</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/api/serializers.py</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ArticleSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Article\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JournalistSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    articles <span class=\"token operator\">=</span> ArticleSerializer<span class=\"token punctuation\">(</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Journalist\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/api/views.py</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JounalistListCreateAPIView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        journalist <span class=\"token operator\">=</span> Journalist<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        serializer <span class=\"token operator\">=</span> JournalistSerializer<span class=\"token punctuation\">(</span>journalist<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># many=True는 많은 관계를 표현할 때에 passing해줘야 한다.</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        serializer <span class=\"token operator\">=</span> JournalistSerializer<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_201_CREATED<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_400_BAD_REQUEST<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/journalists/\nHTTP <span class=\"token number\">200</span> OK\nAllow<span class=\"token operator\">:</span> GET<span class=\"token punctuation\">,</span> POST<span class=\"token punctuation\">,</span> HEAD<span class=\"token punctuation\">,</span> OPTIONS\nContent-Type<span class=\"token operator\">:</span> application/json\nVary<span class=\"token operator\">:</span> Accept\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"articles\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"time_since_publication\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"14 hours, 41 minutes\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test title\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test description\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"!!!\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"!!!!!\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"publication_date\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"created_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26T13:32:15.453026Z\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"updated_at\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-26T13:32:15.453049Z\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"first_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bae\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"last_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mh\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"biography\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hi\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ol start=\"5\">\n<li>\n<p>articles의 데이터를 직접받아오는 것이 아니라 direct link를 받아오려면?</p>\n<ul>\n<li><code class=\"language-text\">serializers.HyperlinkedRelatedField()</code>를 사용해야 합니다. 인자로 <code class=\"language-text\">view_name</code>은 필수이다. <code class=\"language-text\">view_name</code>은 related된 관계를 명시적으로 표시하는\n<em>필수</em> 옵션입니다. urls.py에서 입력한 <code class=\"language-text\">view_name</code>을 가져옵니다</li>\n<li>JournalistSerializer의 옵션에 context={“request”: request}를 넣어야합니다. 공식문서를 보면\n<code class=\"language-text\">context</code>는 시리얼라이징 되는 객체 이외에 추가적인 내용을 제공할 때 필요한 argument입니다.</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/api/serializers.py</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JournalistSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    articles <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>HyperlinkedRelatedField<span class=\"token punctuation\">(</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> view_name<span class=\"token operator\">=</span><span class=\"token string\">\"article-detail\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Journalist\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># news/api/views.py</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JounalistListCreateAPIView</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        journalists <span class=\"token operator\">=</span> Journalist<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        serializer <span class=\"token operator\">=</span> JournalistSerializer<span class=\"token punctuation\">(</span>journalists<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"request\"</span><span class=\"token punctuation\">:</span> request<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","fields":{"tagSlugs":["/tags/drf/"],"slug":"/python/django/drf-05-handle-nested-relationships/"},"frontmatter":{"title":"DRF/#05 DRF로 nested된 관계를 다뤄보자","tags":["DRF"],"date":"2020-04-26T21:05:01.000Z","description":"DRF에서 nested된 관계를 다루는 방법을 알아봅시다.","path":"/python/django/drf-05-handle-nested-relationships/","category":"Django"},"tableOfContents":"","headings":[]}},"pageContext":{"slug":"/python/django/drf-05-handle-nested-relationships/"}},"staticQueryHashes":[]}