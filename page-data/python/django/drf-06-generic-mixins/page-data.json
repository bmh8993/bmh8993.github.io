{"componentChunkName":"component---src-templates-post-template-jsx","path":"/python/django/drf-06-generic-mixins/","result":{"data":{"site":{"siteMetadata":{"title":"Blog by 인간지능","subtitle":"깔끔한 프로그래밍","copyright":"© All rights reserved.","author":{"name":"인간지능","twitter":"#"},"disqusShortname":"bmh8993-github-io","url":"https://bmh8993.github.io/"}},"markdownRemark":{"id":"b351da50-836b-525d-a2cf-b24415e70ebc","html":"<p><a href=\"https://www.django-rest-framework.org/api-guide/generic-views/\">Django-GenericAPIView의 공식문서</a>를 보면 GenericAPIView를 다음과 같이 설명하고 있다.</p>\n<blockquote>\n<p>Django의 GenericAPIView는 공통된 사용 패턴의 shortcut으로 개발된 것이다. 뷰 개발에서 발견되는 특정 공통 idioms와 패턴을 가져와서 추상화한 것이므로 개발자들이 반복하지 않고 일반적인 데이터에 대한 뷰를 빠르게 작성할 수 있도록 한다.</p>\n</blockquote>\n<blockquote>\n<p>… generic views가 API의 요구 사항에 맞지 않으면 <code class=\"language-text\">APIView</code> 클래스를 사용하거나 generic views에서 사용하는 mixins 및 base 클래스를 재사용 가능한 generic views를 작성할 수 있다.</p>\n</blockquote>\n<h2>GenericAPIView</h2>\n<p>이 클래스는 REST framework의 APIView 클래스를 확장한 것으로, 표준 list와 detail view에 일반적으로\n필요한 동작을 추가한다. 제공되는 각각의 구체적인 generic views는 GenericAPIView를 하나 이상의\nmixin 클래스와 결합하여 만든다.</p>\n<ul>\n<li>Ebook과 Review 모델이 있고, 1 : N 관계이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ebook/models.py</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>validators <span class=\"token keyword\">import</span> MinValueValidator<span class=\"token punctuation\">,</span> MaxValueValidator\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Ebook</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">140</span><span class=\"token punctuation\">)</span>\n    author <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n    description <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    description_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>title\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Review</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    created_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now_add<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    updated_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    review_author <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    review <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span>blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    rating <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>PositiveIntegerField<span class=\"token punctuation\">(</span>\n            validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n                MinValueValidator<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                MaxValueValidator<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">)</span>\n    ebook <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>\n            Ebook<span class=\"token punctuation\">,</span>\n            on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">,</span>\n            related_name<span class=\"token operator\">=</span><span class=\"token string\">\"reviews\"</span>\n            <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>rating<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ebook/api/serializers.py</span>\n\n<span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> serializers\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Ebook<span class=\"token punctuation\">,</span> Review\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ReviewSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Review\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EbookSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    reviews <span class=\"token operator\">=</span> ReviewSerializer<span class=\"token punctuation\">(</span>many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> read_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Ebook\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">\"__all__\"</span></code></pre></div>\n<ul>\n<li>GenericAPIView과 mixin을 사용해보자. queryset 리스트와 instance를 생성하는 view이다.</li>\n<li>위에서 설명한대로 한개 이상의 mixin과 GenericAPIView를 사용했다.</li>\n<li><code class=\"language-text\">get</code> method에서 <code class=\"language-text\">list method</code>를 return 하는데, list method는 ListModelMixin에 정의된 method이다. list 메소드에 사용되는 method들은 GenericAPIView의 method이다.</li>\n<li>내부적인 소스를 까보면 <code class=\"language-text\">queryset</code>, <code class=\"language-text\">serializer_class</code>가 필요하다.(나는 개인적으로 정말 궁금해서 코드를 까보았다.)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ebook/api/views.py</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EbookListCreateAPIView</span><span class=\"token punctuation\">(</span>\n        mixins<span class=\"token punctuation\">.</span>ListModelMixin<span class=\"token punctuation\">,</span>\n        mixins<span class=\"token punctuation\">.</span>CreateModelMixin<span class=\"token punctuation\">,</span>\n        generics<span class=\"token punctuation\">.</span>GenericAPIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queryset <span class=\"token operator\">=</span> Ebook<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    serializer_class <span class=\"token operator\">=</span> EbookSerializer\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>위에 작성된 View를 Concrete View Classes로 바꿀 것이다.</li>\n<li>Concrete View Classes는 heavily한 커스터마이징 된 동작이 필요하지 않으면 사용하면 좋다고 설명하고 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">EbookListCreateAPIView</span><span class=\"token punctuation\">(</span>generics<span class=\"token punctuation\">.</span>ListCreateAPIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queryset <span class=\"token operator\">=</span> Ebook<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    serializer_class <span class=\"token operator\">=</span> EbookSerializer</code></pre></div>\n<ul>\n<li>GenericAPIView로 작성한 views.py</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> generics\n<span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> mixins\n<span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>generics <span class=\"token keyword\">import</span> get_object_or_404\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Ebook<span class=\"token punctuation\">,</span> Review\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> EbookSerializer<span class=\"token punctuation\">,</span> ReviewSerializer\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EbookListCreateAPIView</span><span class=\"token punctuation\">(</span>generics<span class=\"token punctuation\">.</span>ListCreateAPIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queryset <span class=\"token operator\">=</span> Ebook<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    serializer_class <span class=\"token operator\">=</span> EbookSerializer\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EbookDetatilAPIView</span><span class=\"token punctuation\">(</span>generics<span class=\"token punctuation\">.</span>RetrieveUpdateDestroyAPIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queryset <span class=\"token operator\">=</span> Ebook<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    serializer_class <span class=\"token operator\">=</span> EbookSerializer\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ReviewCreateAPIView</span><span class=\"token punctuation\">(</span>generics<span class=\"token punctuation\">.</span>CreateAPIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queryset <span class=\"token operator\">=</span> Review<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    serializer_class <span class=\"token operator\">=</span> ReviewSerializer\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">perform_create</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> serializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        ebook_pk <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>kwargs<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"ebook_pk\"</span><span class=\"token punctuation\">)</span>\n        ebook <span class=\"token operator\">=</span> get_object_or_404<span class=\"token punctuation\">(</span>Ebook<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>ebook_pk<span class=\"token punctuation\">)</span>\n        serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>ebook<span class=\"token operator\">=</span>ebook<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ReviewDetailAPIView</span><span class=\"token punctuation\">(</span>generics<span class=\"token punctuation\">.</span>RetrieveUpdateDestroyAPIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queryset <span class=\"token operator\">=</span> Review<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    serializer_class <span class=\"token operator\">=</span> ReviewSerializer</code></pre></div>\n<ul>\n<li>모델을 다음과 같이 수정해야한다. ReviewCreateAPIView에서 <code class=\"language-text\">perform_create</code>를 선언하면서\nebook instance에 ebook을 저장하기 때문이다.(코드에서 보이는 kwargs(ebook-pk)는\nend-point에서 받는다.)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ebook/api/serializers.py</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ReviewSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Review\n        exclude <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ebook\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ebook/api/urls.py</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n        EbookListCreateAPIView<span class=\"token punctuation\">,</span>\n        EbookDetatilAPIView<span class=\"token punctuation\">,</span>\n        ReviewCreateAPIView<span class=\"token punctuation\">,</span>\n        ReviewDetailAPIView\n        <span class=\"token punctuation\">)</span>\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        path<span class=\"token punctuation\">(</span><span class=\"token string\">\"ebooks/\"</span><span class=\"token punctuation\">,</span>\n            EbookListCreateAPIView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"ebook-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">(</span><span class=\"token string\">\"ebooks/&lt;int:pk>/\"</span><span class=\"token punctuation\">,</span>\n            EbookDetatilAPIView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"ebook-detail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">(</span><span class=\"token string\">\"ebooks/&lt;int:ebook_pk>/review/\"</span><span class=\"token punctuation\">,</span>\n            ReviewCreateAPIView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"ebook-review\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">(</span><span class=\"token string\">\"reviews/&lt;int:pk>/\"</span><span class=\"token punctuation\">,</span>\n            ReviewDetailAPIView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"review-detail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span></code></pre></div>\n<hr>\n<p>ref: <a href=\"https://dean-kim.github.io/rest_framework/2017/05/24/Django-REST-Framework-GenericViews.html\">Dean’s blog</a><br>\nref: <a href=\"https://sjquant.tistory.com/34\">SJQuant’s Devlog</a>\nref: <a href=\"https://github.com/encode/django-rest-framework/blob/master/rest_framework/mixins.py\">mixins source code</a></p>","fields":{"tagSlugs":["/tags/drf/"],"slug":"/python/django/drf-06-generic-mixins/"},"frontmatter":{"title":"Django / DRF#06 GenericAPIView and Mixins","tags":["DRF"],"date":"2020-05-01T19:06:02.000Z","description":"DRF의 serializer에 대해서 알아봅시다.","path":"/python/django/drf-06-generic-mixins/","category":"Django"},"tableOfContents":"<ul>\n<li><a href=\"/python/django/drf-06-generic-mixins/#genericapiview\">GenericAPIView</a></li>\n</ul>","headings":[{"value":"GenericAPIView","depth":2}]}},"pageContext":{"slug":"/python/django/drf-06-generic-mixins/"}},"staticQueryHashes":[]}