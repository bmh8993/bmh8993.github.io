{"componentChunkName":"component---src-templates-post-template-jsx","path":"/python/django/raw=queries/","result":{"data":{"site":{"siteMetadata":{"title":"Blog by 인간지능","subtitle":"깔끔한 프로그래밍","copyright":"© All rights reserved.","author":{"name":"인간지능","twitter":"#"},"disqusShortname":"bmh8993-github-io","url":"https://bmh8993.github.io/"}},"markdownRemark":{"id":"41a3f0b2-cf1a-5edd-a3f5-b2c40d6a8b5b","html":"<p>며칠 전에 Django에서 제공하는 <code class=\"language-text\">multiple DB</code>를 사용했습니다.\n데이터를 가져오려고 하자 다음과 같은 에러가 발생했습니다.<br>\n<code class=\"language-text\">ProgramingError: Unknown column &#39;xxx.id&#39; in &#39;field list&#39;</code><br>\n그 이유는 이렇습니다.</p>\n<blockquote>\n<p>장고는 우리가 pk를 설정하지 않아도 자동으로 id 필드를 생성합니다.\n우리는 복잡적인 키를 설정할 수 없습니다. 하지만 <code class=\"language-text\">unique_together</code>라는 트릭을 사용하면 장고가 id 필드가 있다고 인식하게 할 수 있습니다.\n데이터베이스에 id 필드가 존재하지 않기 때문에 에러를 발생시키지만, 장고는 트릭 덕분에 id 필드가 있다고 인식하는 겁니다.</p>\n</blockquote>\n<h4>그렇다면 어떤 방법을 사용해야할까</h4>\n<p>방법은 raw queries를 사용해야 합니다.<br>\ndjango-docs를 살펴보면 raw SQL queries를 사용할 수 있는 2가지 방법을 제공한다고 합니다.</p>\n<ol>\n<li>\n<p>Manager.raw()</p>\n<ul>\n<li>인스턴스를 return</li>\n</ul>\n</li>\n<li>\n<p>execute custom SQL directly</p>\n<ul>\n<li>row를 여러 형태로 return 합니다 기본은 list</li>\n</ul>\n</li>\n</ol>\n<p>저는 여기서 두번째 방법을 사용하려합니다. 그 이유를 설명하자면 이렇습니다.</p>\n<ol>\n<li><strong>일단 공식 문서에서 다중 데이터 베이스르 사용하면 <code class=\"language-text\">django.db.connections</code>를 통해서 db에 접근하는 것을 이야기하고 있습니다.</strong></li>\n<li>\n<p><strong>Manager.raw()를 사용하면 해당하는 쿼리셋(정확히는 RawQuerySet)이 존재하는지 알 수 없습니다.</strong><br></p>\n<blockquote>\n<p>return하는 type이 <code class=\"language-text\">RawQuerySet</code>입니다. 제가 말하는 존재하는 지는 orm에서 exists()와 같은 것들 입니다.\n물론 전혀 방법이 없는 것은 아닙니다. len(list(RawQuerySet))과 같은 방법으로는 가능하지만 RawQuerySet의 갯수가 많을 경우에는 그 비용이 커서 효율적이라고 말할 수 없습니다.</p>\n</blockquote>\n</li>\n</ol>\n<p>그렇다면 custom SQL을 사용하도록하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> connections\n\n<span class=\"token keyword\">with</span> connections<span class=\"token punctuation\">[</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n  cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from products\"</span><span class=\"token punctuation\">)</span>\n  row <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span></code></pre></div>\n<p>결과는 리스트 안의 튜플로 나오게 됩니다. 사용하기에는 참 불편해보입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>id1<span class=\"token punctuation\">,</span> field1_value<span class=\"token punctuation\">,</span> field2_value<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>id2<span class=\"token punctuation\">,</span> field1_value<span class=\"token punctuation\">,</span> field2_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>idN<span class=\"token punctuation\">,</span> field1_value<span class=\"token punctuation\">,</span> field2_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>참고로 with connections[“default”]에서 <code class=\"language-text\">default</code>는 multipel db 세팅에서의 키값입니다.\n<code class=\"language-text\">connections.databases</code>를 찍으면 settings.py의 db 세팅을 볼 수 있습니다.\n동일한 방법으로 다른 db에 접근해서 가능하네요.<br></p>\n<p>이번에는 사용하기 좋은 dict의 형태로 가공해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> connections<span class=\"token punctuation\">[</span><span class=\"token string\">\"daily_lab_db\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n    cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tb_p2pnotice_header\"</span><span class=\"token punctuation\">)</span>\n    desc <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span>description\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>desc<span class=\"token punctuation\">)</span></code></pre></div>\n<p>결과는</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'companyNo'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20483</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'companyName'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">253</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4225</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'homepageUrl'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">253</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4225</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'isAssociation'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'isMarketplace'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'isUse'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'hasError'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>dict를 만들기 위해서 제가 필요한건 컬럼 이름입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> connections<span class=\"token punctuation\">[</span><span class=\"token string\">\"daily_lab_db\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cursor<span class=\"token punctuation\">:</span>\n    cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tb_p2pnotice_header\"</span><span class=\"token punctuation\">)</span>\n    desc <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span>description\n    columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> desc<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>columns<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>결과를 보자면</p>\n<div class=\"gatsby-highlight\" data-language=\"pyhon\"><pre class=\"language-pyhon\"><code class=\"language-pyhon\">[{&quot;col1&quot;: &quot;value1&quot;}, {&quot;col2&quot;: &quot;value2&quot;}, ... {&quot;colN&quot;: &quot;valueN&quot;}]</code></pre></div>\n<p>list comprehension을 통해서 dict를 담은 리스트로 만들었습니다.<br>\n필요에 따라 함수로 만들어서 사용하면 더 좋을 것 같습니다.</p>\n<hr>\n<p>ref: <a href=\"https://stackoverflow.com/questions/42968154/unknown-column-modelname-id-in-field-list\">stack overflow</a><br>\nref: <a href=\"https://docs.djangoproject.com/en/2.2/topics/db/sql/\">django-docs</a></p>","fields":{"tagSlugs":["/tags/django/"],"slug":"/python/django/raw=queries/"},"frontmatter":{"title":"Django / Django에서 orm이 아닌 raw SQL queries 사용하기","tags":["django"],"date":"2020-02-06T09:02:12.000Z","description":"Django에서 raw SQL queries를 사용하는 방법에 대해서 알아봅시다.","path":"/python/django/raw=queries/","category":"Django"},"tableOfContents":"<ul>\n<li><a href=\"/python/django/raw=queries/#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%96%B4%EB%96%A4-%EB%B0%A9%EB%B2%95%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\">그렇다면 어떤 방법을 사용해야할까</a></li>\n</ul>","headings":[{"value":"그렇다면 어떤 방법을 사용해야할까","depth":4}]}},"pageContext":{"slug":"/python/django/raw=queries/"}},"staticQueryHashes":[]}