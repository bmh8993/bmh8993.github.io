{"componentChunkName":"component---src-templates-post-template-jsx","path":"/python/django/select-related-and-prefetch_related/","result":{"data":{"site":{"siteMetadata":{"title":"Blog by 인간지능","subtitle":"깔끔한 프로그래밍","copyright":"© All rights reserved.","author":{"name":"인간지능","twitter":"#"},"disqusShortname":"bmh8993-github-io","url":"https://bmh8993.github.io/"}},"markdownRemark":{"id":"bde612fe-e746-51a8-8892-dd21ea800c30","html":"<p>select<em>related와 prefetch</em>related를 알아봅시다.</p>\n<p>Django의 유저라면 select_related와 prefetch_related를 모를 수 없을 것입니다. 하지만 얼마나 잘\n사용하고 있는지는 의문점을 가져봐야 합니다. 저 또한 그런 의문이 들었기에 이번 포스트를 작성하게\n되었습니다.<br>\n<br>\n설명을 위한 모델은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># app/models.py</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Publisher</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n    price <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    publisher <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Publisher<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">,</span> related_name<span class=\"token operator\">=</span><span class=\"token string\">'books'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Store</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n    books <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>Book<span class=\"token punctuation\">,</span> related_name<span class=\"token operator\">=</span><span class=\"token string\">'stores'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</code></pre></div>\n<p>설명을 위한 데이터를 다음 조건에 맞춰서 만들 것입니다.<br>\n<br>\n100개의 book이 있고, 5개의 publisher는 각 publisher당 20개씩 출판했습니다. 그리고\n10개의 매장에서 10개씩 판매중 입니다. custom command를 통해서 데이터를 insert 할 예정입니다.\n<code class=\"language-text\">python manage.py insert</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># app/management/commands/insert.py</span>\n\n<span class=\"token keyword\">import</span> random\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>management<span class=\"token punctuation\">.</span>base <span class=\"token keyword\">import</span> BaseCommand\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Publisher<span class=\"token punctuation\">,</span> Store<span class=\"token punctuation\">,</span> Book\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Command</span><span class=\"token punctuation\">(</span>BaseCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    이 커맨드는 5개의 Publisher, 100개의 books와 10개의 Stores를 DB에 insert합니다.\n    \"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        Publisher<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        Store<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># create 5 publishers</span>\n        publishers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Publisher<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Publisher</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        Publisher<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>bulk_create<span class=\"token punctuation\">(</span>publishers<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># create 20 books for every publishers</span>\n        counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> publisher <span class=\"token keyword\">in</span> Publisher<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                counter <span class=\"token operator\">=</span> counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n                books<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>Book<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Book</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> publisher<span class=\"token operator\">=</span>publisher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>bulk_create<span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># create 10 stores and insert 10 books in every store</span>\n        books <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            temp_books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>books<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n            store <span class=\"token operator\">=</span> Store<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Store</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n            store<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>temp_books<span class=\"token punctuation\">)</span>\n            store<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>그리고 보기 좋게 정리하기 위한 데코레이터를 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> functools\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> connection<span class=\"token punctuation\">,</span> reset_queries\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">query_debugger</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    @functools<span class=\"token punctuation\">.</span>wraps<span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inner_func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        reset_queries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        start_queries <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">.</span>queries<span class=\"token punctuation\">)</span>\n\n        start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>perf_counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>perf_counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        end_queries <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">.</span>queries<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Function : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>func<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Number of Queries : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>end_queries <span class=\"token operator\">-</span> start_queries<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Finished in : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">s\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> result\n\n    <span class=\"token keyword\">return</span> inner_func</code></pre></div>\n<h1>select_related</h1>\n<p><code class=\"language-text\">select_related</code>는 관련된 단일객체를 가져오는데, 정참조일 때에는 <code class=\"language-text\">ForeignKey, OneToOne</code>, 역참조 일때에는 <code class=\"language-text\">OneToOne</code>일 때에 사용합니다.<br>\n<br>\n<code class=\"language-text\">select_related</code>를 SQL로 풀어보면 <code class=\"language-text\">Inner Join</code>을 하여 관련 개체의 필드를 <code class=\"language-text\">Select</code> 문에 포함시켜서 관련 개체를 얻습니다.</p>\n<h2>bad</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> query_debugger <span class=\"token keyword\">import</span> query_debugger\n\n@query_debugger\n<span class=\"token keyword\">def</span> <span class=\"token function\">book_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># queryset 평가</span>\n        books<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> book<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> book<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'publisher'</span><span class=\"token punctuation\">:</span> book<span class=\"token punctuation\">.</span>publisher<span class=\"token punctuation\">.</span>name\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># book.publisher에 접근, 캐싱되지 않은 데이터이므로 query 발생</span>\n\n    <span class=\"token keyword\">return</span> books</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : book_list\nNumber of Queries : 101\nFinished in : 0.05s</code></pre></div>\n<p>하나의 쿼리가 모든 책에 접근하고 반복하는 동안 ForeignKey로 연결된 <code class=\"language-text\">Publisher</code>에 각각 접근하여 쿼리가 실행됩니다.<br>\n<br>\n실제로 sql을 보면</p>\n<ol>\n<li>book에 접근하는 쿼리 1</li>\n<li>book에 해당하는 publisher에 접근하는 쿼리 100개</li>\n</ol>\n<p><code class=\"language-text\">총 101개</code>의 쿼리가 실행됩니다.</p>\n<h2>good</h2>\n<p><code class=\"language-text\">select_related</code>를 사용해서 결과를 확인해 봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">book_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>select_related<span class=\"token punctuation\">(</span><span class=\"token string\">\"publisher\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># queryset 평가</span>\n        books<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> book<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> book<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'publisher'</span><span class=\"token punctuation\">:</span> book<span class=\"token punctuation\">.</span>publisher<span class=\"token punctuation\">.</span>name\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> books</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : book_list\nNumber of Queries : 1\nFinished in : 0.00s</code></pre></div>\n<p>Publisher를 Inner Join으로 하나의 쿼리로 가져온결과, 101개 에서 1개로 쿼리가 줄었습니다!</p>\n<h1>정참조에서의 prefetch_related(ManyToMany)</h1>\n<h2>Example1</h2>\n<p><code class=\"language-text\">prefetch_related</code>는 두개의 테이블을 가져와서 <strong>Python에서 Join을 합니다.</strong>\n정참조일 때에는 <code class=\"language-text\">ManyToMany</code> 역참조일 때에는 <code class=\"language-text\">ForeignKey, ManyToMany</code>일 때에 사용합니다.<br></p>\n<h2>bad</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">store_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Store<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    stores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> store <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 쿼리셋 평가</span>\n        books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> store<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 각 store마다 books로 접근, 쿼리 발생</span>\n        stores<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'books'</span><span class=\"token punctuation\">:</span> books\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> stores</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : store_list\nNumber of Queries : 11\nFinished in : 0.01s</code></pre></div>\n<p>SQL은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_store\"</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_store_books\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"book_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_store_books\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"book_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span></code></pre></div>\n<p>데이터베이스 내에는 10개의 상점이 있고 각각 10권의 책을 가지고 있습니다. 쿼리가 어떻게 되었는지 살펴보면\n일단 하나의 쿼리로 모든 상점들을 fetch해오고 반복문을 돌면서 하나의 상점에서 각각 쿼리를 발생시켜 books에 접근을 했습니다.\n그래서 1 + 10 과같은 결과를 가져온 것입니다.</p>\n<h2>good</h2>\n<p><code class=\"language-text\">prefetch_related</code>를 사용하여 결과를 살펴봅시다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">store_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Store<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>prefetch_related<span class=\"token punctuation\">(</span><span class=\"token string\">\"books\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    stores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> store <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>\n        books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> store<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        stores<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'books'</span><span class=\"token punctuation\">:</span> books<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> stores</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : store_list\nNumber of Queries : 2\nFinished in : 0.01s</code></pre></div>\n<p>SQL은 다음과 같습니다.</p>\n<p><code class=\"language-text\">prefetch_related</code>를 사용한 결과는 SQL을 살펴보면 조금 더 빠르게 이해할 수 있을 것 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_store\"</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"_prefetch_related_val_store_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_store_books\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"book_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span>\n<span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>'</code></pre></div>\n<p><code class=\"language-text\">prefetch_related</code>를 사용하지 않았을 때와 다른 점은 두번째 쿼리에서 store의 id 값들을 가져와서 In을 사용한다는 것입니다. 이것을 통해서 여러번\n매칭 하였던 것을 한 번으로 줄여서 1 + 1과 같은 결과를 가져왔습니다.</p>\n<h2>Example2</h2>\n<p>이번에는 필터를 사용한 결과를 살펴봅시다.</p>\n<h2>bad</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">store_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Store<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>prefetch_related<span class=\"token punctuation\">(</span><span class=\"token string\">\"books\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    stores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> store <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>\n        books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> store<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>price__range<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        stores<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'books'</span><span class=\"token punctuation\">:</span> books<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> stores</code></pre></div>\n<p>결과는 다음과 같습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : store_list\nNumber of Queries : 12\nFinished in : 0.01s</code></pre></div>\n<p>SQL은 다음과 같습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_store\"</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"_prefetch_related_val_store_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_store_books\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"book_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>'\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_store_books\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"book_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">AND</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">250</span> <span class=\"token operator\">AND</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_store_books\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"book_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">AND</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">250</span> <span class=\"token operator\">AND</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>조건이 추가되자 조건을 필터링하는 구문을 포함한 쿼리가 추가로 실행되었습니다.\n1 + 1 + 10 총 12개의 쿼리가 발생했습니다.</p>\n<h2>good</h2>\n<p>Prefetch를 사용하여 다시 작성해보도록 합시다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">store_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Store<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>prefetch_related<span class=\"token punctuation\">(</span>\n        Prefetch<span class=\"token punctuation\">(</span><span class=\"token string\">\"books\"</span><span class=\"token punctuation\">,</span> queryset<span class=\"token operator\">=</span>Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>price__range<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    stores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> store <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>\n        books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> store<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        stores<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'books'</span><span class=\"token punctuation\">:</span> books<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> stores</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : store_list\nNumber of Queries : 2\nFinished in : 0.00s</code></pre></div>\n<p>SQL은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_store\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_store\"</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"_prefetch_related_val_store_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_store_books\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"book_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">250</span> <span class=\"token operator\">AND</span> <span class=\"token number\">300</span> <span class=\"token operator\">AND</span> <span class=\"token string\">\"bookstore_store_books\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"store_id\"</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prefetch를 사용하니까 별도의 쿼리를 작성했던 WHERE를 AND로 묶어서 하나의 쿼리를 생성했습니다.</p>\n<h1>역참조에서의 prefetch_related</h1>\n<h2>Example1</h2>\n<p><strong>부모와 관련된 자식 데이터를 가져올 때</strong><br>\n<br>\n이번에는 역참조입니다. 지금까지 사용한 관계에서 예를 들면 Publisher가 출간한 book들을 조회할 때에 사용할 수 있습니다.</p>\n<h2>bad</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">publisher_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Publisher<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    publishers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> publisher <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>\n        books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> publisher<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        publishers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'books'</span><span class=\"token punctuation\">:</span> books<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> publishers</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : publisher_list\nNumber of Queries : 6\nFinished in : 0.00s</code></pre></div>\n<p>SQL은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_publisher\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_publisher\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_publisher\"</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span></code></pre></div>\n<p>일단 Publisher를 가져오는 쿼리 1개, book중에서 publisher의 id와 동일한 book을 가져오는 쿼리 5개(1~5까지)\n총 6개입니다.</p>\n<h2>good</h2>\n<p>역참조에서 <code class=\"language-text\">prefetch_related</code>를 사용해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">publisher_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Publisher<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>prefetch_related<span class=\"token punctuation\">(</span><span class=\"token string\">\"books\"</span><span class=\"token punctuation\">)</span>\n\n    publishers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> publisher <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>\n        books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> publisher<span class=\"token punctuation\">.</span>books<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        publishers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'books'</span><span class=\"token punctuation\">:</span> books<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> publishers</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : publisher_list\nNumber of Queries : 2\nFinished in : 0.00s</code></pre></div>\n<p>SQL은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_publisher\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_publisher\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_publisher\"</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>동일하게 Publisher를 가져오는 쿼리 1개, 위 와다르게 book에 WHERE ~ IN을 사용한 쿼리 1개로 총 2개가 되었습니다.</p>\n<h2>Example2</h2>\n<p><strong>자식 테이블에 조건을 걸어서 조건에 해당하는 부모객체를 가져올 때</strong><br>\n<br>\n250~300에 출간한 책들을 가지고 있는 출판사 데이터를 가져와봅시다. 배운바에 의하면 역참조를 위해\n<code class=\"language-text\">prefetch_related</code>를 사용하고 필터를 걸어야합니다.</p>\n<h2>bad</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">publisher_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Publisher<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>prefetch_related<span class=\"token punctuation\">(</span><span class=\"token string\">\"books\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>books__price__range<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token number\">00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    publishers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> publisher <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>\n        publishers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> publishers</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : publisher_list\nNumber of Queries : 2\nFinished in : 0.01s</code></pre></div>\n<p>SQL 다음과 같습니다.</p>\n<ul>\n<li>첫번째 SQL은 publisher에 book을 inner join 해서 가져옵니다. 그리고\n그 book의 조건은 250~300사이의 가격을 형성하고 있다는 것 입니다. 해당하는 publisher들을 가져옵니다.</li>\n<li>두번째 SLQ은 book을 가져오는데 여기서 in 조건에 들어간 id들은 첫번째 sql에서 나온 결과에 해당하는\npublisher의 id입니다. 해당 publisher에게 속해있는 모든 책들을 가져옵니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_publisher\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_publisher\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_publisher\"</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"bookstore_publisher\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">250</span> <span class=\"token operator\">AND</span> <span class=\"token number\">300</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"bookstore_book\"</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"bookstore_book\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"publisher_id\"</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>good</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@query_debugger</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">publisher_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    queryset <span class=\"token operator\">=</span> Publisher<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>books__price__range<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    publishers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> publisher <span class=\"token keyword\">in</span> queryset<span class=\"token punctuation\">:</span>\n        publishers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> publisher<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> publishers</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Function : publisher_list\nNumber of Queries : 1\nFinished in : 0.00s</code></pre></div>\n<p>sql을 살펴보면 이전의 첫번째 sql과 동일합니다. 어떻게 된 일일까요</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">`</span>bookstore_publisher<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">`</span>bookstore_publisher<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">`</span>bookstore_publisher<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">`</span>bookstore_book<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>bookstore_publisher<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">`</span>bookstore_book<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>publisher_id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">`</span>bookstore_book<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>price<span class=\"token punctuation\">`</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">250</span> <span class=\"token operator\">AND</span> <span class=\"token number\">300</span></code></pre></div>\n<p>django의 query 소스코드를 봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">demote_joins</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> aliases<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    Change join type from LOUTER to INNER for all joins in aliases.\n\n    Similarly to promote_joins(), this method must ensure no join chains\n    containing first an outer, then an inner join are generated. If we\n    are demoting b->c join in chain a LOUTER b LOUTER c then we must\n    demote a->b automatically, or otherwise the demotion of b->c doesn't\n    actually change anything in the query results. .\n    \"\"\"</span>\n    aliases <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>aliases<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> aliases<span class=\"token punctuation\">:</span>\n        alias <span class=\"token operator\">=</span> aliases<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>alias_map<span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>join_type <span class=\"token operator\">==</span> LOUTER<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>alias_map<span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>alias_map<span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>demote<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            parent_alias <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>alias_map<span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent_alias\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>alias_map<span class=\"token punctuation\">[</span>parent_alias<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>join_type <span class=\"token operator\">==</span> INNER<span class=\"token punctuation\">:</span>\n                aliases<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>parent_alias<span class=\"token punctuation\">)</span></code></pre></div>\n<p>소스 코드를 보면 chain join이 없으면 inner join으로 쿼리를 하도록 강제하고 있기 때문입니다.<br>\n<br>\n많은 블로그 내용들을 하나로 모아보았습니다. 귀한 내용을 공유해주신 개발자님들께 다시한번 감사를 드립니다.</p>\n<hr>\n<p>ref: <a href=\"https://blog.myungseokang.dev/posts/make-django-custom-command/\">Django 나만의 Management Command 만들어보기</a><br>\nref: <a href=\"https://cjh5414.github.io/wraps-with-decorator/\">Python decorator에 @wraps를 사용해야 하는 이유</a><br>\nref: <a href=\"https://medium.com/better-programming/django-select-related-and-prefetch-related-f23043fd635d\">Django select<em>related and prefetch</em>related</a><br>\nref: <a href=\"https://medium.com/chrisjune-13837/%EB%8B%B9%EC%8B%A0%EC%9D%B4-%EB%AA%B0%EB%9E%90%EB%8D%98-django-prefetch-5d7dd0bd7e15\">당신이 몰랐던 Django Prefetch.</a></p>","fields":{"tagSlugs":["/tags/django/"],"slug":"/python/django/select-related-and-prefetch_related/"},"frontmatter":{"title":"Django/select_related와 prefetch_related를 정복해보자","tags":["django"],"date":"2020-07-06T20:08:24.000Z","description":"select_related와 prefetch_related를 알아봅시다.","path":"/python/django/select-related-and-prefetch_related/","category":"Django"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/python/django/select-related-and-prefetch_related/#select_related\">select_related</a></p>\n<ul>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#bad\">bad</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#good\">good</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/python/django/select-related-and-prefetch_related/#%EC%A0%95%EC%B0%B8%EC%A1%B0%EC%97%90%EC%84%9C%EC%9D%98-prefetch_relatedmanytomany\">정참조에서의 prefetch_related(ManyToMany)</a></p>\n<ul>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#example1\">Example1</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#bad-1\">bad</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#good-1\">good</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#example2\">Example2</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#bad-2\">bad</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#good-2\">good</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/python/django/select-related-and-prefetch_related/#%EC%97%AD%EC%B0%B8%EC%A1%B0%EC%97%90%EC%84%9C%EC%9D%98-prefetch_related\">역참조에서의 prefetch_related</a></p>\n<ul>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#example1-1\">Example1</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#bad-3\">bad</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#good-3\">good</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#example2-1\">Example2</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#bad-4\">bad</a></li>\n<li><a href=\"/python/django/select-related-and-prefetch_related/#good-4\">good</a></li>\n</ul>\n</li>\n</ul>","headings":[{"value":"select_related","depth":1},{"value":"bad","depth":2},{"value":"good","depth":2},{"value":"정참조에서의 prefetch_related(ManyToMany)","depth":1},{"value":"Example1","depth":2},{"value":"bad","depth":2},{"value":"good","depth":2},{"value":"Example2","depth":2},{"value":"bad","depth":2},{"value":"good","depth":2},{"value":"역참조에서의 prefetch_related","depth":1},{"value":"Example1","depth":2},{"value":"bad","depth":2},{"value":"good","depth":2},{"value":"Example2","depth":2},{"value":"bad","depth":2},{"value":"good","depth":2}]}},"pageContext":{"slug":"/python/django/select-related-and-prefetch_related/"}},"staticQueryHashes":[]}